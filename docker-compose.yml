version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: idle-game-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-idlegame}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-idlegame123}
      POSTGRES_DB: ${POSTGRES_DB:-idle_game}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-idlegame} -d ${POSTGRES_DB:-idle_game}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - idle-game-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: idle-game-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - idle-game-network

  # 后端服务
  backend:
    build:
      context: ./idle-game-backend
      dockerfile: Dockerfile
    container_name: idle-game-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-idlegame}:${POSTGRES_PASSWORD:-idlegame123}@postgres:5432/${POSTGRES_DB:-idle_game}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      PORT: 3000
      HOST: 0.0.0.0
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - idle-game-network
    volumes:
      - ./logs:/app/logs

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: idle-game-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./idle-game-frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - idle-game-network

networks:
  idle-game-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

